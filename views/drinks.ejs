<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title><%= category %> | Bubble Tea</title>
  <link rel="stylesheet" href="/styles/menu.css"/>
  
  <script type="text/javascript">
    function googleTranslateElementInit() {
      new google.translate.TranslateElement({pageLanguage: 'en'}, 'google_translate_element');
    }
  </script>
  <script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
</head>
<body>

  <div id="google_translate_element" style="position: absolute; top: 10px; right: 10px;"></div>

  <header>
    <h1>üßã ShareTea</h1>
    <nav>
      <ul class="category-header">
        <li><a href="/menu">‚Üê Back to Categories</a></li>
      </ul>
    </nav>
  </header>

  <main>
    <h2><%= category %></h2>

    <% if (drinks.length === 0) { %>
      <p class="no-drinks">No drinks available in this category yet!</p>
    <% } else { %>
      <div class="drinks-container">
        <% drinks.forEach(drink => { %>
          <div class="drink-item">
            <div class="drink-click" data-drink="<%= drink.drinkname %>" data-price="<%= drink.price %>">
              <img src="/images/<%= drink.image_url %>" alt="<%= drink.drinkname %>"/>
            </div>
            <h3><%= drink.drinkname %></h3>
            <p class="info">Calories: <%= drink.calories || 'N/A' %></p>
            <p class="info">Allergens: <%= drink.allergens || 'None' %></p>
            <p class="price">$<%= drink.price %></p>
            <a href="/menu/info/<%= drink.drinkid %>" class="info-icon" title="More Info">
              <div class="info-circle">i</div>
            </a>
          </div>
        <% }); %>
      </div>
    <% } %>

    <button onclick="window.location.href='/customers/checkout'" class="checkout-btn">Cart</button>
  </main>

  <!-- Modal -->
  <div id="customization-modal" class="modal hidden">
    <div class="modal-content">
      <span class="close-button">&times;</span>
      <h3 id="selected-drink-name">Customize Your Drink</h3>

      <div class="custom-section">
        <label>Size:</label>
        <div class="options">
          <% ["Small", "Medium", "Large"].forEach(level => { %>
            <button class="option-btn size-btn"><%= level %></button>
          <% }); %>
        </div>
      </div>

      <div class="custom-section">
        <label>Sugar:</label>
        <div class="options">
          <% [0, 20, 40, 60, 80, 100].forEach(level => { %>
            <button class="option-btn sugar-btn"><%= level %>%</button>
          <% }); %>
        </div>
      </div>

      <div class="custom-section">
        <label>Ice:</label>
        <div class="options">
          <% [0, 20, 40, 60, 80, 100].forEach(level => { %>
            <button class="option-btn ice-btn"><%= level %>%</button>
          <% }); %>
        </div>
      </div>

      <div class="custom-section">
        <label>Toppings:</label>
        <div class="options">
          <% toppings.forEach(topping => { %>
            <button class="option-btn topping-btn"><%= topping %></button>
          <% }); %>
        </div>
      </div>

      <button class="confirm-btn">Add to Order</button>
    </div>
  </div>

  <script>
    const modal = document.getElementById("customization-modal");
    const closeButton = document.querySelector(".close-button");
    const drinkNameDisplay = document.getElementById("selected-drink-name");
    let selectedDrink = {};

    document.querySelectorAll(".drink-click").forEach(item => {
      item.addEventListener("click", () => {
        const drinkName = item.dataset.drink;
        const price = item.dataset.price;
        selectedDrink = { drinkName, price };

        drinkNameDisplay.textContent = "Customize: " + item.dataset.drink;
        document.querySelectorAll(".option-btn").forEach(btn => btn.classList.remove("selected"));
        modal.classList.remove("hidden");
      });
    });

    closeButton.addEventListener("click", () => {
      modal.classList.add("hidden");
    });

    window.addEventListener("click", (event) => {
      if (event.target === modal) {
        modal.classList.add("hidden");
      }
    });

    document.querySelectorAll(".size-btn").forEach(button => {
      button.addEventListener("click", () => {
        document.querySelectorAll(".size-btn").forEach(btn => btn.classList.remove("selected"));
        button.classList.add("selected");
      });
    });

    document.querySelectorAll(".sugar-btn, .ice-btn").forEach(button => {
      button.addEventListener("click", () => {
        const group = button.classList.contains("sugar-btn") ? ".sugar-btn" : ".ice-btn";
        document.querySelectorAll(group).forEach(btn => btn.classList.remove("selected"));
        button.classList.add("selected");
      });
    });

    document.querySelectorAll(".topping-btn").forEach(button => {
      button.addEventListener("click", () => {
        button.classList.toggle("selected");
      });
    });

    document.querySelector(".confirm-btn").addEventListener("click", async () => {
      const sizeBtn = document.querySelector(".size-btn.selected");
      const size = sizeBtn && sizeBtn.textContent;

      const sugarBtn = document.querySelector(".sugar-btn.selected");
      const sugarPercent = sugarBtn && sugarBtn.textContent;

      const iceBtn = document.querySelector(".ice-btn.selected");
      const icePercent = iceBtn && iceBtn.textContent;

      if (!sugarPercent || !icePercent || !size) {
        alert("You must select a sugar level, ice level, and size");
        return;
      }

      const sugarNum = parseInt(sugarPercent) / 20;
      const iceNum = parseInt(icePercent) / 20;
      const toppings = Array.from(document.querySelectorAll(".topping-btn.selected")).map(btn => btn.textContent);

      const basePrice = parseFloat(selectedDrink.price);
      const toppingPrice = toppings.length * 0.75;
      const totalPrice = basePrice + toppingPrice;

      const orderData = {
        name: selectedDrink.drinkName,
        price: totalPrice,
        size: size,
        sugar: sugarNum,
        ice: iceNum,
        toppings
      };

      try {
        const response = await fetch('/customers/add-item', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(orderData)
        });

        if (response.ok) {
          const result = await response.json();
          console.log('Order added:', result);
          modal.classList.add("hidden");
        } else {
          console.error('Failed to add to order');
        }
      } catch (err) {
        console.error('Error:', err);
      }
    });
  </script>
  <!-- Link to your external script file -->
  <script src="/scripts/speaktext.js"></script>
  <script src="/scripts/textzoom.js"></script>
</body>
</html>
